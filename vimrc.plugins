" vim: syntax=vim

call plug#begin()

Plug 'vim-syntastic/syntastic'
Plug 'majutsushi/tagbar'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'editorconfig/editorconfig-vim'
Plug 'vim-airline/vim-airline'
Plug 'junegunn/fzf', { 'do': './install --bin' }
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-surround'
Plug 'neomake/neomake'
"Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'moll/vim-bbye'
Plug 'ayu-theme/ayu-vim'

if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif

" Add Haskell Language
if g:tangzero_haskell_enabled
    Plug 'neovimhaskell/haskell-vim' 
    Plug 'alx741/vim-hindent'
    Plug 'alx741/vim-stylishask'
endif

" Add Go Language
if g:tangzero_go_enabled
    Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
endif

" Add Rust Language
if g:tangzero_rust_enabled
    Plug 'rust-lang/rust.vim'
endif

" Add Python language
if g:tangzero_python_enabled
    Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }
    Plug 'deoplete-plugins/deoplete-jedi'
endif

" Add Custom Plugins
if filereadable(expand("~/.vimrc.local.plugins"))
    source ~/.vimrc.local.plugins
endif

call plug#end()

filetype plugin indent on 

" Plugins Configuration

let g:deoplete#enable_at_startup = 1

" Haskell
if g:tangzero_haskell_enabled
    let g:haskell_indent_if = 2
    let g:haskell_indent_before_where = 2
    let g:haskell_indent_case_alternative = 1
    let g:haskell_indent_let_no_in = 0
    autocmd Filetype haskell setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
endif

" Go
if g:tangzero_go_enabled
    let g:go_def_mode = 'gopls'
    let g:go_info_mode = 'gopls'
endif

" Rust
if g:tangzero_rust_enabled
    let g:rustfmt_autosave = 1
endif

" Python
if g:tangzero_python_enabled
    let g:pymode_python = 'python3'
    let g:pymode_lint_checkers = ['pylint', 'pyflakes', 'pep8', 'mccabe']
    let g:pymode_options_max_line_length = 120
    let g:pymode_lint_options_pep8 = {'max_line_length': g:pymode_options_max_line_length}
    let g:syntastic_python_checkers = []
    autocmd FileType python autocmd BufWritePre <buffer> call pymode#lint#check()
endif

"source ~/.vim/vimrc.coc
